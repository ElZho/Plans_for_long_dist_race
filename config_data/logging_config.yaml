version: 1
disable_existing_loggers: False

formatters:
  default:
    format: '#%(levelname)-8s %(name)s:%(funcName)s - %(message)s'

  formatter_1:
    format: '[%(asctime)s] #%(levelname)-8s %(filename)s:%(lineno)d - %(name)s:%(funcName)s - %(message)s'

  formatter_2:
    format: '#%(levelname)-8s [%(asctime)s] - %(filename)s:%(lineno)d - %(name)s:%(funcName)s - %(message)s'

  formatter_3:
    format: '#%(levelname)-8s [%(asctime)s] - %(message)s'

filters:
  critical_filter:
    (): filters.log_filters.CriticalLogFilter

  error_filter:
    (): filters.log_filters.ErrorLogFilter

  debug_warning_filter:
    (): filters.log_filters.DebugWarningLogFilter

handlers:
  default:
    class: logging.StreamHandler
    level: INFO
    formatter: default

  stderr:
    class: logging.StreamHandler

  stdout:
    class: logging.StreamHandler
    formatter: formatter_2
    filters: [debug_warning_filter]
    stream: ext://sys.stdout

  error_file:
    class: logging.FileHandler
    filename: ../logs/log_test.log
    mode: w
    level: DEBUG
    formatter: formatter_1
    filters: [error_filter]

  critical_file:
    class: logging.FileHandler
    filename: critical.log
    mode: w
    formatter: formatter_3
    filters: [critical_filter]

loggers:
    services:
      services:
        level: DEBUG
      handlers: [error_file]

    database:
      methods:
        handlers: [stdout]

      models:
        handlers: [stderr, critical_file]

root:
  formatter: default
  propagate: False,
  handlers: [default, error_file]